{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\agrevs\\\\Documents\\\\Experis Academy\\\\Lecture Tasks - VS Code\\\\Frontend\\\\chat-app\\\\client\\\\src\\\\components\\\\ColorSelect\\\\ColorSelect.js\";\nimport React, { useState } from 'react';\nimport { ChromePicker } from 'react-color';\nimport './ColorSelect.css';\n\nconst ColorSelect = () => {\n  const [color, setColor] = useState('#fff');\n  const [showColorPicker, setShowColorPicker] = useState(false);\n\n  const onColorSelectClick = ev => {\n    setShowColorPicker(!showColorPicker);\n    console.log(ev); //setColor();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"colorButton backgroundBlue\",\n    onClick: onColorSelectClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, \"Select Message Color\"), showColorPicker && /*#__PURE__*/React.createElement(ChromePicker, {\n    color: color,\n    onChange: updatedColor => setColor(updatedColor),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 34\n    }\n  }));\n};\n\nexport default ColorSelect;","map":{"version":3,"sources":["C:/Users/agrevs/Documents/Experis Academy/Lecture Tasks - VS Code/Frontend/chat-app/client/src/components/ColorSelect/ColorSelect.js"],"names":["React","useState","ChromePicker","ColorSelect","color","setColor","showColorPicker","setShowColorPicker","onColorSelectClick","ev","console","log","updatedColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,YAAT,QAA6B,aAA7B;AAEA,OAAO,mBAAP;;AAGA,MAAMC,WAAW,GAAG,MAAM;AAEtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,MAAD,CAAlC;AACA,QAAM,CAACK,eAAD,EAAkBC,kBAAlB,IAAwCN,QAAQ,CAAC,KAAD,CAAtD;;AAEA,QAAMO,kBAAkB,GAAIC,EAAD,IAAQ;AAC/BF,IAAAA,kBAAkB,CAAC,CAACD,eAAF,CAAlB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ,EAF+B,CAI/B;AACH,GALD;;AAOA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,SAAS,EAAC,4BAAlB;AAA+C,IAAA,OAAO,EAAED,kBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEMF,eAAe,iBAAI,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEF,KAArB;AAA4B,IAAA,QAAQ,EAAEQ,YAAY,IAAIP,QAAQ,CAACO,YAAD,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFzB,CADJ;AAMH,CAlBD;;AAoBA,eAAeT,WAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { ChromePicker } from 'react-color'\r\n\r\nimport './ColorSelect.css';\r\n\r\n\r\nconst ColorSelect = () => {\r\n\r\n    const [color, setColor] = useState('#fff');\r\n    const [showColorPicker, setShowColorPicker] = useState(false);\r\n\r\n    const onColorSelectClick = (ev) => {\r\n        setShowColorPicker(!showColorPicker);\r\n        console.log(ev);\r\n        \r\n        //setColor();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button className=\"colorButton backgroundBlue\" onClick={onColorSelectClick}>Select Message Color</button>\r\n            { showColorPicker && <ChromePicker color={color} onChange={updatedColor => setColor(updatedColor)} /> }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ColorSelect;"]},"metadata":{},"sourceType":"module"}