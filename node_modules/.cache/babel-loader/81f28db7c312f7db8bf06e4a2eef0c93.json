{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\agrevs\\\\Documents\\\\Experis Academy\\\\Lecture Tasks - VS Code\\\\Frontend\\\\chat-app\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport InfoBar from '../InfoBar/InfoBar';\nimport TextContainer from '../TextContainer/TextContainer';\nimport Input from '../Input/Input';\nimport Messages from '../Messages/Messages';\nimport './Chat.css';\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  const [color, setColor] = useState(\"#2979FF\");\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [users, setUsers] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = 'localhost:5000';\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    setName(name);\n    setRoom(room);\n    socket.emit('join', {\n      name,\n      room\n    }, () => {});\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n    socket.on(\"roomData\", ({\n      users\n    }) => {\n      setUsers(users);\n    });\n  }, [messages]); // Function for sending messages\n\n  const sendMessage = event => {\n    // Prevent page from reloading on keypress\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  }; //  When changing the color of the messages\n\n\n  const getColorChange = newColor => {\n    setColor(newColor);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"outerContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InfoBar, {\n    room: room,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Messages, {\n    messages: messages,\n    name: name,\n    color: color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    message: message,\n    setMessage: setMessage,\n    sendMessage: sendMessage,\n    getColorChange: onColorChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(TextContainer, {\n    users: users,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Chat;","map":{"version":3,"sources":["C:/Users/agrevs/Documents/Experis Academy/Lecture Tasks - VS Code/Frontend/chat-app/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","InfoBar","TextContainer","Input","Messages","socket","Chat","location","color","setColor","name","setName","room","setRoom","users","setUsers","message","setMessage","messages","setMessages","ENDPOINT","parse","search","emit","off","on","sendMessage","event","preventDefault","getColorChange","newColor","onColorChange"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport queryString from 'query-string';\r\nimport io from 'socket.io-client';\r\nimport InfoBar from '../InfoBar/InfoBar';\r\nimport TextContainer from '../TextContainer/TextContainer';\r\nimport Input from '../Input/Input';\r\nimport Messages from '../Messages/Messages';\r\n\r\nimport './Chat.css';\r\n\r\nlet socket;\r\n\r\n\r\nconst Chat = ({ location }) => {\r\n    const [color, setColor] = useState(\"#2979FF\");\r\n    const [name, setName] = useState('');\r\n    const [room, setRoom] = useState('');\r\n    const [users, setUsers] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const ENDPOINT = 'localhost:5000';\r\n\r\n    useEffect(() => {\r\n        const { name, room  } = queryString.parse(location.search);\r\n\r\n        socket = io(ENDPOINT);\r\n        \r\n        setName(name);\r\n        setRoom(room);\r\n\r\n        socket.emit('join', { name, room }, () => {\r\n            \r\n        });\r\n\r\n        return () => {\r\n            socket.emit('disconnect');\r\n\r\n            socket.off();\r\n        }\r\n    }, [ENDPOINT, location.search]);\r\n\r\n    useEffect(() => {\r\n        socket.on('message', (message) => {\r\n            setMessages([...messages, message]);\r\n        });\r\n\r\n        socket.on(\"roomData\", ({ users }) => {\r\n            setUsers(users);\r\n          });\r\n    }, [messages])\r\n\r\n    // Function for sending messages\r\n    const sendMessage = (event) => {\r\n        // Prevent page from reloading on keypress\r\n        event.preventDefault();\r\n\r\n        if(message) {\r\n            socket.emit('sendMessage', message, () => setMessage(''));\r\n        }\r\n    }\r\n\r\n    //  When changing the color of the messages\r\n    const getColorChange = (newColor) => {\r\n        setColor(newColor);\r\n    }\r\n\r\n    return (\r\n        <div className=\"outerContainer\">\r\n            <div className=\"container\">\r\n                <InfoBar room={room} />\r\n                <Messages messages={messages} name={name} color={color} />\r\n                <Input message={message} setMessage={setMessage} sendMessage={sendMessage} getColorChange={onColorChange} />\r\n            </div>\r\n            <TextContainer users={users} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;"]},"metadata":{},"sourceType":"module"}