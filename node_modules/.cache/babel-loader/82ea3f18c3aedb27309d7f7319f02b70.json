{"ast":null,"code":"import { handleResponse } from \"./api\";\nconst API_REGISTER_URL = 'http://localhost:8080/register';\nconst API_LOGIN_URL = 'http://localhost:8080/login';\nconst API_USERS_URL = \"http://localhost:8080/users\";\nconst API_COLOR_URL = 'http://localhost:8080/users/color';\n\nconst createFetchOptions = (method, body) => ({\n  method: method,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify(body)\n});\n\nexport const registerUser = (username, password) => {\n  return fetch(API_REGISTER_URL, createFetchOptions('POST', {\n    username,\n    password\n  })).then(r => r.json()).then(handleResponse);\n};\nexport const loginUser = (username, password) => {\n  return fetch(API_LOGIN_URL, createFetchOptions('POST', {\n    username,\n    password\n  })).then(r => r.json()).then(handleResponse);\n};\nexport const fetchUsers = () => {\n  return fetch(API_USERS_URL, {\n    method: 'GET',\n    'Content-Type': 'application/json'\n  }).then(r => r.json()).then(handleResponse);\n};\nexport const fetchUserColor = username => {\n  return fetch(API_COLOR_URL + '/' + username, {\n    method: 'GET',\n    'Content-Type': 'application/json'\n  }).then(r => r.json()).then(handleResponse);\n};\n/* Inte klar\r\nexport const changeUserColor = (username, color) => {\r\n    return fetch(\r\n        API_COLOR_URL + '/' + username, createFetchOptions('POST', {\r\n            username, \r\n            color \r\n        }\r\n    )\r\n    ).then(r => r.json())\r\n    .then(handleResponse);\r\n} */","map":{"version":3,"sources":["C:/Users/agrevs/Documents/Experis Academy/Lecture Tasks - VS Code/Frontend/chat-app/client/src/api/user.api.js"],"names":["handleResponse","API_REGISTER_URL","API_LOGIN_URL","API_USERS_URL","API_COLOR_URL","createFetchOptions","method","body","headers","JSON","stringify","registerUser","username","password","fetch","then","r","json","loginUser","fetchUsers","fetchUserColor"],"mappings":"AAAA,SAASA,cAAT,QAA+B,OAA/B;AAEA,MAAMC,gBAAgB,GAAG,gCAAzB;AACA,MAAMC,aAAa,GAAG,6BAAtB;AACA,MAAMC,aAAa,GAAG,6BAAtB;AACA,MAAMC,aAAa,GAAG,mCAAtB;;AAGA,MAAMC,kBAAkB,GAAG,CAACC,MAAD,EAASC,IAAT,MAAmB;AAC1CD,EAAAA,MAAM,EAAEA,MADkC;AAE1CE,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT,GAFiC;AAK1CD,EAAAA,IAAI,EAAEE,IAAI,CAACC,SAAL,CAAeH,IAAf;AALoC,CAAnB,CAA3B;;AAQA,OAAO,MAAMI,YAAY,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAChD,SAAOC,KAAK,CACRb,gBADQ,EAERI,kBAAkB,CAAC,MAAD,EAAS;AACnBO,IAAAA,QADmB;AAEnBC,IAAAA;AAFmB,GAAT,CAFV,CAAL,CAOLE,IAPK,CAOAC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAPL,EAQNF,IARM,CAQDf,cARC,CAAP;AASH,CAVM;AAYP,OAAO,MAAMkB,SAAS,GAAG,CAACN,QAAD,EAAWC,QAAX,KAAwB;AAC7C,SAAOC,KAAK,CACRZ,aADQ,EAERG,kBAAkB,CAAC,MAAD,EAAS;AACnBO,IAAAA,QADmB;AAEnBC,IAAAA;AAFmB,GAAT,CAFV,CAAL,CAOLE,IAPK,CAOAC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAPL,EAQNF,IARM,CAQDf,cARC,CAAP;AASH,CAVM;AAYP,OAAO,MAAMmB,UAAU,GAAG,MAAM;AAC5B,SAAOL,KAAK,CACRX,aADQ,EACO;AAAEG,IAAAA,MAAM,EAAE,KAAV;AAAiB,oBAAgB;AAAjC,GADP,CAAL,CAELS,IAFK,CAEAC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAFL,EAGNF,IAHM,CAGDf,cAHC,CAAP;AAIH,CALM;AAOP,OAAO,MAAMoB,cAAc,GAAIR,QAAD,IAAc;AACxC,SAAOE,KAAK,CACRV,aAAa,GAAG,GAAhB,GAAsBQ,QADd,EACwB;AAAEN,IAAAA,MAAM,EAAE,KAAV;AAAiB,oBAAgB;AAAjC,GADxB,CAAL,CAELS,IAFK,CAEAC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAFL,EAGNF,IAHM,CAGDf,cAHC,CAAP;AAIH,CALM;AAOP","sourcesContent":["import { handleResponse } from \"./api\";\r\n\r\nconst API_REGISTER_URL = 'http://localhost:8080/register';\r\nconst API_LOGIN_URL = 'http://localhost:8080/login';\r\nconst API_USERS_URL = \"http://localhost:8080/users\";\r\nconst API_COLOR_URL = 'http://localhost:8080/users/color';\r\n\r\n\r\nconst createFetchOptions = (method, body) => ({\r\n    method: method,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(body)\r\n  });\r\n\r\nexport const registerUser = (username, password) => {\r\n    return fetch(\r\n        API_REGISTER_URL, \r\n        createFetchOptions('POST', {\r\n                username, \r\n                password \r\n            }\r\n        )\r\n    ).then(r => r.json())\r\n    .then(handleResponse);\r\n}\r\n\r\nexport const loginUser = (username, password) => {\r\n    return fetch(\r\n        API_LOGIN_URL, \r\n        createFetchOptions('POST', {\r\n                username, \r\n                password \r\n            }\r\n        )\r\n    ).then(r => r.json())\r\n    .then(handleResponse);\r\n}\r\n\r\nexport const fetchUsers = () => {\r\n    return fetch(\r\n        API_USERS_URL, { method: 'GET', 'Content-Type': 'application/json'}\r\n    ).then(r => r.json())\r\n    .then(handleResponse);\r\n}\r\n\r\nexport const fetchUserColor = (username) => {\r\n    return fetch(\r\n        API_COLOR_URL + '/' + username, { method: 'GET', 'Content-Type': 'application/json'}\r\n    ).then(r => r.json())\r\n    .then(handleResponse);\r\n}\r\n\r\n/* Inte klar\r\nexport const changeUserColor = (username, color) => {\r\n    return fetch(\r\n        API_COLOR_URL + '/' + username, createFetchOptions('POST', {\r\n            username, \r\n            color \r\n        }\r\n    )\r\n    ).then(r => r.json())\r\n    .then(handleResponse);\r\n} */\r\n"]},"metadata":{},"sourceType":"module"}