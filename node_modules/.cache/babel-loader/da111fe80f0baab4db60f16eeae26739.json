{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\agrevs\\\\Documents\\\\Experis Academy\\\\Lecture Tasks - VS Code\\\\Frontend\\\\chat-app\\\\client\\\\src\\\\components\\\\Join\\\\Join.js\";\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport { loginUser } from '../../api/user.api';\nimport './Join.css';\nlet socket;\n\nconst Join = ({\n  location\n}) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [room, setRoom] = useState('chatroom');\n  const history = useHistory();\n  const ENDPOINT = 'localhost:5000';\n  const [isLoading, setIsLoading] = useState(false);\n  const [loginError, setLoginError] = useState('');\n\n  const checkCredentials = async () => {\n    setIsLoading(true);\n    setLoginError('');\n    let result;\n\n    try {\n      result = await loginUser(username, password);\n    } catch (e) {\n      setLoginError(result.message);\n    } finally {\n      setIsLoading(false);\n      history.replace(`/chat?name=${username}&room=chatroom`);\n    }\n    /*         if (password && name) {\r\n                socket = io(ENDPOINT);\r\n    \r\n                socket.emit('login', { name, password, room }, (result) => {\r\n                    if(result.error) {\r\n                        console.log(result);\r\n                    } else {\r\n                        history.replace(`/chat?name=${name}&room=chatroom`);\r\n                    }\r\n                });\r\n            }   */\n\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"joinOuterContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"joinInnerContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"Join\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Name\",\n    className: \"joinInput\",\n    type: \"text\",\n    onChange: event => setUsername(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 22\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Password\",\n    className: \"joinInput\",\n    type: \"password\",\n    onChange: event => setPassword(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 22\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button mt-20\",\n    type: \"button\",\n    onClick: checkCredentials,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, \"Sign In\"), isLoading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 36\n    }\n  }, \"Logging in..\"), loginError && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, loginError)));\n};\n\nexport default Join;","map":{"version":3,"sources":["C:/Users/agrevs/Documents/Experis Academy/Lecture Tasks - VS Code/Frontend/chat-app/client/src/components/Join/Join.js"],"names":["React","useState","useHistory","io","loginUser","socket","Join","location","username","setUsername","password","setPassword","room","setRoom","history","ENDPOINT","isLoading","setIsLoading","loginError","setLoginError","checkCredentials","result","e","message","replace","event","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAO,YAAP;AAEA,IAAIC,MAAJ;;AAGA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,UAAD,CAAhC;AACA,QAAMa,OAAO,GAAGZ,UAAU,EAA1B;AACA,QAAMa,QAAQ,GAAG,gBAAjB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,KAAD,CAA1C;AACF,QAAM,CAACiB,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAAC,EAAD,CAA5C;;AAEE,QAAMmB,gBAAgB,GAAG,YAAY;AACjCH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,aAAa,CAAC,EAAD,CAAb;AACA,QAAIE,MAAJ;;AAEA,QAAI;AACFA,MAAAA,MAAM,GAAG,MAAMjB,SAAS,CAACI,QAAD,EAAWE,QAAX,CAAxB;AACD,KAFD,CAEE,OAAOY,CAAP,EAAU;AACVH,MAAAA,aAAa,CAACE,MAAM,CAACE,OAAR,CAAb;AACD,KAJD,SAIU;AACNN,MAAAA,YAAY,CAAC,KAAD,CAAZ;AAEAH,MAAAA,OAAO,CAACU,OAAR,CAAiB,cAAahB,QAAS,gBAAvC;AACH;AAGT;;;;;;;;;;;;AAWK,GA3BD;;AA6BA,sBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK;AAAO,IAAA,WAAW,EAAC,MAAnB;AAA0B,IAAA,SAAS,EAAC,WAApC;AAAgD,IAAA,IAAI,EAAC,MAArD;AAA4D,IAAA,QAAQ,EAAGiB,KAAD,IAAWhB,WAAW,CAACgB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK;AAAO,IAAA,WAAW,EAAC,UAAnB;AAA8B,IAAA,SAAS,EAAC,WAAxC;AAAoD,IAAA,IAAI,EAAC,UAAzD;AAAoE,IAAA,QAAQ,EAAGF,KAAD,IAAWd,WAAW,CAACc,KAAK,CAACC,MAAN,CAAaC,KAAd,CAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,CAHJ,eAIQ;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAiC,IAAA,IAAI,EAAC,QAAtC;AAA+C,IAAA,OAAO,EAAEP,gBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJR,EAMUJ,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANvB,EAOFE,UAAU,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,UAAL,CAPZ,CADJ,CADJ;AAgBH,CAtDD;;AAwDA,eAAeZ,IAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\nimport { loginUser } from '../../api/user.api';\r\nimport './Join.css';\r\n\r\nlet socket;\r\n\r\n\r\nconst Join = ({ location }) => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [room, setRoom] = useState('chatroom');\r\n    const history = useHistory();\r\n    const ENDPOINT = 'localhost:5000';\r\n    const [isLoading, setIsLoading] = useState(false);\r\n  const [loginError, setLoginError] = useState('');\r\n\r\n    const checkCredentials = async () => {\r\n        setIsLoading(true);\r\n        setLoginError('');\r\n        let result;\r\n\r\n        try {\r\n          result = await loginUser(username, password);\r\n        } catch (e) {\r\n          setLoginError(result.message);\r\n        } finally {\r\n            setIsLoading(false);\r\n\r\n            history.replace(`/chat?name=${username}&room=chatroom`);\r\n        }\r\n\r\n\r\n/*         if (password && name) {\r\n            socket = io(ENDPOINT);\r\n\r\n            socket.emit('login', { name, password, room }, (result) => {\r\n                if(result.error) {\r\n                    console.log(result);\r\n                } else {\r\n                    history.replace(`/chat?name=${name}&room=chatroom`);\r\n                }\r\n            });\r\n        }   */\r\n    }\r\n\r\n    return (\r\n        <div className=\"joinOuterContainer\">\r\n            <div className=\"joinInnerContainer\">\r\n                <h1 className=\"heading\">Join</h1>\r\n                <div><input placeholder=\"Name\" className=\"joinInput\" type=\"text\" onChange={(event) => setUsername(event.target.value)} /></div>\r\n                <div><input placeholder=\"Password\" className=\"joinInput\" type=\"password\" onChange={(event) => setPassword(event.target.value)} /></div>\r\n                    <button className=\"button mt-20\" type=\"button\" onClick={checkCredentials}>Sign In</button>\r\n\r\n                    { isLoading && <p>Logging in..</p> }\r\n        { loginError && <p>{ loginError }</p> }\r\n                {/* <Link onClick={(event) => (!name || !password) ? event.preventDefault() : null} to={`/chat?name=${name}&password=${password}&room=chatroom`}>\r\n                    <button className=\"button mt-20\" type=\"submit\">Sign In</button>\r\n                </Link> */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Join;"]},"metadata":{},"sourceType":"module"}